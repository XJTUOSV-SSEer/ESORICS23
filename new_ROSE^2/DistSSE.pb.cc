// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DistSSE.proto

#include "DistSSE.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace DistSSE {
constexpr batchOMAPFindMessage::batchOMAPFindMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : idorn_()
  , w_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , flag_(0u){}
struct batchOMAPFindMessageDefaultTypeInternal {
  constexpr batchOMAPFindMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~batchOMAPFindMessageDefaultTypeInternal() {}
  union {
    batchOMAPFindMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT batchOMAPFindMessageDefaultTypeInternal _batchOMAPFindMessage_default_instance_;
constexpr batchOMAPFindReply::batchOMAPFindReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(){}
struct batchOMAPFindReplyDefaultTypeInternal {
  constexpr batchOMAPFindReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~batchOMAPFindReplyDefaultTypeInternal() {}
  union {
    batchOMAPFindReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT batchOMAPFindReplyDefaultTypeInternal _batchOMAPFindReply_default_instance_;
constexpr OMAPFindMessage::OMAPFindMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : w_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , idorn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , flag_(0u){}
struct OMAPFindMessageDefaultTypeInternal {
  constexpr OMAPFindMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OMAPFindMessageDefaultTypeInternal() {}
  union {
    OMAPFindMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OMAPFindMessageDefaultTypeInternal _OMAPFindMessage_default_instance_;
constexpr OMAPFindReply::OMAPFindReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct OMAPFindReplyDefaultTypeInternal {
  constexpr OMAPFindReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OMAPFindReplyDefaultTypeInternal() {}
  union {
    OMAPFindReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OMAPFindReplyDefaultTypeInternal _OMAPFindReply_default_instance_;
constexpr OMAPInsertMessage::OMAPInsertMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : w_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , idorn_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , value_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , flag_(0u){}
struct OMAPInsertMessageDefaultTypeInternal {
  constexpr OMAPInsertMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~OMAPInsertMessageDefaultTypeInternal() {}
  union {
    OMAPInsertMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT OMAPInsertMessageDefaultTypeInternal _OMAPInsertMessage_default_instance_;
constexpr UpdateRequestMessage_Rose_2::UpdateRequestMessage_Rose_2(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : l_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , c_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateRequestMessage_Rose_2DefaultTypeInternal {
  constexpr UpdateRequestMessage_Rose_2DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRequestMessage_Rose_2DefaultTypeInternal() {}
  union {
    UpdateRequestMessage_Rose_2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRequestMessage_Rose_2DefaultTypeInternal _UpdateRequestMessage_Rose_2_default_instance_;
constexpr SearchRequestMessage_Rose_2::SearchRequestMessage_Rose_2(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : k_u_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , delta_k_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tk_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , sn_(0u)
  , cnt_d_(0u)
  , cnt_i_(0u){}
struct SearchRequestMessage_Rose_2DefaultTypeInternal {
  constexpr SearchRequestMessage_Rose_2DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchRequestMessage_Rose_2DefaultTypeInternal() {}
  union {
    SearchRequestMessage_Rose_2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchRequestMessage_Rose_2DefaultTypeInternal _SearchRequestMessage_Rose_2_default_instance_;
constexpr SearchReply_Rose_2::SearchReply_Rose_2(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : c_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SearchReply_Rose_2DefaultTypeInternal {
  constexpr SearchReply_Rose_2DefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchReply_Rose_2DefaultTypeInternal() {}
  union {
    SearchReply_Rose_2 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchReply_Rose_2DefaultTypeInternal _SearchReply_Rose_2_default_instance_;
constexpr SetupRequestMessage::SetupRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : setup_size_(uint64_t{0u}){}
struct SetupRequestMessageDefaultTypeInternal {
  constexpr SetupRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SetupRequestMessageDefaultTypeInternal() {}
  union {
    SetupRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SetupRequestMessageDefaultTypeInternal _SetupRequestMessage_default_instance_;
constexpr SearchRequestMessage::SearchRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tpd_l_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , tpd_t_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , l_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , r_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , c_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SearchRequestMessageDefaultTypeInternal {
  constexpr SearchRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchRequestMessageDefaultTypeInternal() {}
  union {
    SearchRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchRequestMessageDefaultTypeInternal _SearchRequestMessage_default_instance_;
constexpr SearchReply::SearchReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : ind_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct SearchReplyDefaultTypeInternal {
  constexpr SearchReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchReplyDefaultTypeInternal() {}
  union {
    SearchReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchReplyDefaultTypeInternal _SearchReply_default_instance_;
constexpr CacheRequestMessage::CacheRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tw_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , inds_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct CacheRequestMessageDefaultTypeInternal {
  constexpr CacheRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~CacheRequestMessageDefaultTypeInternal() {}
  union {
    CacheRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT CacheRequestMessageDefaultTypeInternal _CacheRequestMessage_default_instance_;
constexpr UpdateRequestMessage::UpdateRequestMessage(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : l_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , r_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , d_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , c_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct UpdateRequestMessageDefaultTypeInternal {
  constexpr UpdateRequestMessageDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~UpdateRequestMessageDefaultTypeInternal() {}
  union {
    UpdateRequestMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UpdateRequestMessageDefaultTypeInternal _UpdateRequestMessage_default_instance_;
constexpr ExecuteStatus::ExecuteStatus(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : status_(false){}
struct ExecuteStatusDefaultTypeInternal {
  constexpr ExecuteStatusDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ExecuteStatusDefaultTypeInternal() {}
  union {
    ExecuteStatus _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ExecuteStatusDefaultTypeInternal _ExecuteStatus_default_instance_;
}  // namespace DistSSE
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_DistSSE_2eproto[14];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_DistSSE_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_DistSSE_2eproto = nullptr;

const uint32_t TableStruct_DistSSE_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindMessage, w_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindMessage, idorn_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindMessage, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::batchOMAPFindReply, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindMessage, w_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindMessage, idorn_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindMessage, flag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPFindReply, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPInsertMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPInsertMessage, w_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPInsertMessage, idorn_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPInsertMessage, flag_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::OMAPInsertMessage, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage_Rose_2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage_Rose_2, l_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage_Rose_2, c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, k_u_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, delta_k_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, tk_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, sn_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, cnt_d_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage_Rose_2, cnt_i_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchReply_Rose_2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchReply_Rose_2, c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SetupRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SetupRequestMessage, setup_size_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, tpd_l_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, tpd_t_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, l_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, r_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, d_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchRequestMessage, c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::SearchReply, ind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::CacheRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::CacheRequestMessage, tw_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::CacheRequestMessage, inds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage, l_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage, r_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage, d_),
  PROTOBUF_FIELD_OFFSET(::DistSSE::UpdateRequestMessage, c_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DistSSE::ExecuteStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DistSSE::ExecuteStatus, status_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::DistSSE::batchOMAPFindMessage)},
  { 9, -1, -1, sizeof(::DistSSE::batchOMAPFindReply)},
  { 16, -1, -1, sizeof(::DistSSE::OMAPFindMessage)},
  { 25, -1, -1, sizeof(::DistSSE::OMAPFindReply)},
  { 32, -1, -1, sizeof(::DistSSE::OMAPInsertMessage)},
  { 42, -1, -1, sizeof(::DistSSE::UpdateRequestMessage_Rose_2)},
  { 50, -1, -1, sizeof(::DistSSE::SearchRequestMessage_Rose_2)},
  { 62, -1, -1, sizeof(::DistSSE::SearchReply_Rose_2)},
  { 69, -1, -1, sizeof(::DistSSE::SetupRequestMessage)},
  { 76, -1, -1, sizeof(::DistSSE::SearchRequestMessage)},
  { 88, -1, -1, sizeof(::DistSSE::SearchReply)},
  { 95, -1, -1, sizeof(::DistSSE::CacheRequestMessage)},
  { 103, -1, -1, sizeof(::DistSSE::UpdateRequestMessage)},
  { 113, -1, -1, sizeof(::DistSSE::ExecuteStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_batchOMAPFindMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_batchOMAPFindReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_OMAPFindMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_OMAPFindReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_OMAPInsertMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_UpdateRequestMessage_Rose_2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_SearchRequestMessage_Rose_2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_SearchReply_Rose_2_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_SetupRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_SearchRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_SearchReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_CacheRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_UpdateRequestMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::DistSSE::_ExecuteStatus_default_instance_),
};

const char descriptor_table_protodef_DistSSE_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rDistSSE.proto\022\007DistSSE\032\033google/protobu"
  "f/empty.proto\">\n\024batchOMAPFindMessage\022\t\n"
  "\001w\030\001 \001(\014\022\r\n\005idorn\030\002 \003(\014\022\014\n\004flag\030\003 \001(\r\"#\n"
  "\022batchOMAPFindReply\022\r\n\005value\030\001 \003(\014\"9\n\017OM"
  "APFindMessage\022\t\n\001w\030\001 \001(\014\022\r\n\005idorn\030\002 \001(\014\022"
  "\014\n\004flag\030\003 \001(\r\"\036\n\rOMAPFindReply\022\r\n\005value\030"
  "\001 \001(\014\"J\n\021OMAPInsertMessage\022\t\n\001w\030\001 \001(\014\022\r\n"
  "\005idorn\030\002 \001(\014\022\014\n\004flag\030\003 \001(\r\022\r\n\005value\030\004 \001("
  "\014\"3\n\033UpdateRequestMessage_Rose_2\022\t\n\001L\030\001 "
  "\001(\014\022\t\n\001C\030\002 \001(\014\"q\n\033SearchRequestMessage_R"
  "ose_2\022\013\n\003K_u\030\001 \001(\014\022\017\n\007delta_k\030\002 \001(\014\022\n\n\002t"
  "k\030\003 \001(\014\022\n\n\002sn\030\004 \001(\r\022\r\n\005cnt_d\030\005 \001(\r\022\r\n\005cn"
  "t_i\030\006 \001(\r\"\037\n\022SearchReply_Rose_2\022\t\n\001C\030\001 \001"
  "(\014\")\n\023SetupRequestMessage\022\022\n\nsetup_size\030"
  "\001 \001(\004\"`\n\024SearchRequestMessage\022\r\n\005tpd_L\030\001"
  " \001(\014\022\r\n\005tpd_T\030\002 \001(\014\022\t\n\001L\030\003 \001(\014\022\t\n\001R\030\004 \001("
  "\014\022\t\n\001D\030\005 \001(\014\022\t\n\001C\030\006 \001(\014\"\032\n\013SearchReply\022\013"
  "\n\003ind\030\001 \001(\014\"/\n\023CacheRequestMessage\022\n\n\002tw"
  "\030\001 \001(\014\022\014\n\004inds\030\002 \001(\014\"B\n\024UpdateRequestMes"
  "sage\022\t\n\001L\030\001 \001(\014\022\t\n\001R\030\002 \001(\014\022\t\n\001D\030\003 \001(\014\022\t\n"
  "\001C\030\004 \001(\014\"\037\n\rExecuteStatus\022\016\n\006status\030\001 \001("
  "\0102\331\010\n\003RPC\022\?\n\005setup\022\034.DistSSE.SetupReques"
  "tMessage\032\026.DistSSE.ExecuteStatus\"\000\022A\n\006se"
  "arch\022\035.DistSSE.SearchRequestMessage\032\024.Di"
  "stSSE.SearchReply\"\0000\001\022F\n\013search_rose\022\035.D"
  "istSSE.SearchRequestMessage\032\024.DistSSE.Se"
  "archReply\"\0000\001\022V\n\rsearch_Rose_2\022$.DistSSE"
  ".SearchRequestMessage_Rose_2\032\033.DistSSE.S"
  "earchReply_Rose_2\"\0000\001\022A\n\006update\022\035.DistSS"
  "E.UpdateRequestMessage\032\026.DistSSE.Execute"
  "Status\"\000\022O\n\rupdate_Rose_2\022$.DistSSE.Upda"
  "teRequestMessage_Rose_2\032\026.DistSSE.Execut"
  "eStatus\"\000\022I\n\014batch_update\022\035.DistSSE.Upda"
  "teRequestMessage\032\026.DistSSE.ExecuteStatus"
  "\"\000(\001\022N\n\021batch_update_rose\022\035.DistSSE.Upda"
  "teRequestMessage\032\026.DistSSE.ExecuteStatus"
  "\"\000(\001\022W\n\023batch_update_Rose_2\022$.DistSSE.Up"
  "dateRequestMessage_Rose_2\032\026.DistSSE.Exec"
  "uteStatus\"\000(\001\022\?\n\005cache\022\034.DistSSE.CacheRe"
  "questMessage\032\026.DistSSE.ExecuteStatus\"\000\022G"
  "\n\013batch_cache\022\034.DistSSE.CacheRequestMess"
  "age\032\026.DistSSE.ExecuteStatus\"\000(\001\022>\n\010OMAPF"
  "ind\022\030.DistSSE.OMAPFindMessage\032\026.DistSSE."
  "OMAPFindReply\"\000\022B\n\nOMAPInsert\022\032.DistSSE."
  "OMAPInsertMessage\032\026.DistSSE.ExecuteStatu"
  "s\"\000\022M\n\rbatchOMAPFind\022\035.DistSSE.batchOMAP"
  "FindMessage\032\033.DistSSE.batchOMAPFindReply"
  "\"\000\022I\n\017batchOMAPInsert\022\032.DistSSE.OMAPInse"
  "rtMessage\032\026.DistSSE.ExecuteStatus\"\000(\001b\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_DistSSE_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_DistSSE_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_DistSSE_2eproto = {
  false, false, 1965, descriptor_table_protodef_DistSSE_2eproto, "DistSSE.proto", 
  &descriptor_table_DistSSE_2eproto_once, descriptor_table_DistSSE_2eproto_deps, 1, 14,
  schemas, file_default_instances, TableStruct_DistSSE_2eproto::offsets,
  file_level_metadata_DistSSE_2eproto, file_level_enum_descriptors_DistSSE_2eproto, file_level_service_descriptors_DistSSE_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_DistSSE_2eproto_getter() {
  return &descriptor_table_DistSSE_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_DistSSE_2eproto(&descriptor_table_DistSSE_2eproto);
namespace DistSSE {

// ===================================================================

class batchOMAPFindMessage::_Internal {
 public:
};

batchOMAPFindMessage::batchOMAPFindMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  idorn_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.batchOMAPFindMessage)
}
batchOMAPFindMessage::batchOMAPFindMessage(const batchOMAPFindMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      idorn_(from.idorn_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArenaForAllocation());
  }
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.batchOMAPFindMessage)
}

inline void batchOMAPFindMessage::SharedCtor() {
w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
flag_ = 0u;
}

batchOMAPFindMessage::~batchOMAPFindMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.batchOMAPFindMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void batchOMAPFindMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void batchOMAPFindMessage::ArenaDtor(void* object) {
  batchOMAPFindMessage* _this = reinterpret_cast< batchOMAPFindMessage* >(object);
  (void)_this;
}
void batchOMAPFindMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void batchOMAPFindMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void batchOMAPFindMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.batchOMAPFindMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  idorn_.Clear();
  w_.ClearToEmpty();
  flag_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* batchOMAPFindMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes idorn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_idorn();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // uint32 flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* batchOMAPFindMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.batchOMAPFindMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_w(), target);
  }

  // repeated bytes idorn = 2;
  for (int i = 0, n = this->_internal_idorn_size(); i < n; i++) {
    const auto& s = this->_internal_idorn(i);
    target = stream->WriteBytes(2, s, target);
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.batchOMAPFindMessage)
  return target;
}

size_t batchOMAPFindMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.batchOMAPFindMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes idorn = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(idorn_.size());
  for (int i = 0, n = idorn_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      idorn_.Get(i));
  }

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_w());
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData batchOMAPFindMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    batchOMAPFindMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*batchOMAPFindMessage::GetClassData() const { return &_class_data_; }

void batchOMAPFindMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<batchOMAPFindMessage *>(to)->MergeFrom(
      static_cast<const batchOMAPFindMessage &>(from));
}


void batchOMAPFindMessage::MergeFrom(const batchOMAPFindMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.batchOMAPFindMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  idorn_.MergeFrom(from.idorn_);
  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (from._internal_flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void batchOMAPFindMessage::CopyFrom(const batchOMAPFindMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.batchOMAPFindMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool batchOMAPFindMessage::IsInitialized() const {
  return true;
}

void batchOMAPFindMessage::InternalSwap(batchOMAPFindMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  idorn_.InternalSwap(&other->idorn_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata batchOMAPFindMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[0]);
}

// ===================================================================

class batchOMAPFindReply::_Internal {
 public:
};

batchOMAPFindReply::batchOMAPFindReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  value_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.batchOMAPFindReply)
}
batchOMAPFindReply::batchOMAPFindReply(const batchOMAPFindReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DistSSE.batchOMAPFindReply)
}

inline void batchOMAPFindReply::SharedCtor() {
}

batchOMAPFindReply::~batchOMAPFindReply() {
  // @@protoc_insertion_point(destructor:DistSSE.batchOMAPFindReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void batchOMAPFindReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void batchOMAPFindReply::ArenaDtor(void* object) {
  batchOMAPFindReply* _this = reinterpret_cast< batchOMAPFindReply* >(object);
  (void)_this;
}
void batchOMAPFindReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void batchOMAPFindReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void batchOMAPFindReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.batchOMAPFindReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* batchOMAPFindReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* batchOMAPFindReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.batchOMAPFindReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    target = stream->WriteBytes(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.batchOMAPFindReply)
  return target;
}

size_t batchOMAPFindReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.batchOMAPFindReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData batchOMAPFindReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    batchOMAPFindReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*batchOMAPFindReply::GetClassData() const { return &_class_data_; }

void batchOMAPFindReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<batchOMAPFindReply *>(to)->MergeFrom(
      static_cast<const batchOMAPFindReply &>(from));
}


void batchOMAPFindReply::MergeFrom(const batchOMAPFindReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.batchOMAPFindReply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void batchOMAPFindReply::CopyFrom(const batchOMAPFindReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.batchOMAPFindReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool batchOMAPFindReply::IsInitialized() const {
  return true;
}

void batchOMAPFindReply::InternalSwap(batchOMAPFindReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata batchOMAPFindReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[1]);
}

// ===================================================================

class OMAPFindMessage::_Internal {
 public:
};

OMAPFindMessage::OMAPFindMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.OMAPFindMessage)
}
OMAPFindMessage::OMAPFindMessage(const OMAPFindMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArenaForAllocation());
  }
  idorn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    idorn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_idorn().empty()) {
    idorn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_idorn(), 
      GetArenaForAllocation());
  }
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.OMAPFindMessage)
}

inline void OMAPFindMessage::SharedCtor() {
w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
idorn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  idorn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
flag_ = 0u;
}

OMAPFindMessage::~OMAPFindMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.OMAPFindMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OMAPFindMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idorn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OMAPFindMessage::ArenaDtor(void* object) {
  OMAPFindMessage* _this = reinterpret_cast< OMAPFindMessage* >(object);
  (void)_this;
}
void OMAPFindMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OMAPFindMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OMAPFindMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.OMAPFindMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  w_.ClearToEmpty();
  idorn_.ClearToEmpty();
  flag_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OMAPFindMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes idorn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_idorn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OMAPFindMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.OMAPFindMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_w(), target);
  }

  // bytes idorn = 2;
  if (!this->_internal_idorn().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_idorn(), target);
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_flag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.OMAPFindMessage)
  return target;
}

size_t OMAPFindMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.OMAPFindMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_w());
  }

  // bytes idorn = 2;
  if (!this->_internal_idorn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_idorn());
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OMAPFindMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OMAPFindMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OMAPFindMessage::GetClassData() const { return &_class_data_; }

void OMAPFindMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OMAPFindMessage *>(to)->MergeFrom(
      static_cast<const OMAPFindMessage &>(from));
}


void OMAPFindMessage::MergeFrom(const OMAPFindMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.OMAPFindMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_idorn().empty()) {
    _internal_set_idorn(from._internal_idorn());
  }
  if (from._internal_flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OMAPFindMessage::CopyFrom(const OMAPFindMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.OMAPFindMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OMAPFindMessage::IsInitialized() const {
  return true;
}

void OMAPFindMessage::InternalSwap(OMAPFindMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &idorn_, lhs_arena,
      &other->idorn_, rhs_arena
  );
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OMAPFindMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[2]);
}

// ===================================================================

class OMAPFindReply::_Internal {
 public:
};

OMAPFindReply::OMAPFindReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.OMAPFindReply)
}
OMAPFindReply::OMAPFindReply(const OMAPFindReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.OMAPFindReply)
}

inline void OMAPFindReply::SharedCtor() {
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OMAPFindReply::~OMAPFindReply() {
  // @@protoc_insertion_point(destructor:DistSSE.OMAPFindReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OMAPFindReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OMAPFindReply::ArenaDtor(void* object) {
  OMAPFindReply* _this = reinterpret_cast< OMAPFindReply* >(object);
  (void)_this;
}
void OMAPFindReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OMAPFindReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OMAPFindReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.OMAPFindReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OMAPFindReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OMAPFindReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.OMAPFindReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.OMAPFindReply)
  return target;
}

size_t OMAPFindReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.OMAPFindReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OMAPFindReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OMAPFindReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OMAPFindReply::GetClassData() const { return &_class_data_; }

void OMAPFindReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OMAPFindReply *>(to)->MergeFrom(
      static_cast<const OMAPFindReply &>(from));
}


void OMAPFindReply::MergeFrom(const OMAPFindReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.OMAPFindReply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OMAPFindReply::CopyFrom(const OMAPFindReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.OMAPFindReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OMAPFindReply::IsInitialized() const {
  return true;
}

void OMAPFindReply::InternalSwap(OMAPFindReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata OMAPFindReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[3]);
}

// ===================================================================

class OMAPInsertMessage::_Internal {
 public:
};

OMAPInsertMessage::OMAPInsertMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.OMAPInsertMessage)
}
OMAPInsertMessage::OMAPInsertMessage(const OMAPInsertMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_w().empty()) {
    w_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_w(), 
      GetArenaForAllocation());
  }
  idorn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    idorn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_idorn().empty()) {
    idorn_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_idorn(), 
      GetArenaForAllocation());
  }
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_value().empty()) {
    value_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_value(), 
      GetArenaForAllocation());
  }
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.OMAPInsertMessage)
}

inline void OMAPInsertMessage::SharedCtor() {
w_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  w_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
idorn_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  idorn_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
flag_ = 0u;
}

OMAPInsertMessage::~OMAPInsertMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.OMAPInsertMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void OMAPInsertMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  w_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  idorn_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void OMAPInsertMessage::ArenaDtor(void* object) {
  OMAPInsertMessage* _this = reinterpret_cast< OMAPInsertMessage* >(object);
  (void)_this;
}
void OMAPInsertMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OMAPInsertMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void OMAPInsertMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.OMAPInsertMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  w_.ClearToEmpty();
  idorn_.ClearToEmpty();
  value_.ClearToEmpty();
  flag_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OMAPInsertMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes w = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_w();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes idorn = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_idorn();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 flag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          flag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OMAPInsertMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.OMAPInsertMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_w(), target);
  }

  // bytes idorn = 2;
  if (!this->_internal_idorn().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_idorn(), target);
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_flag(), target);
  }

  // bytes value = 4;
  if (!this->_internal_value().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.OMAPInsertMessage)
  return target;
}

size_t OMAPInsertMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.OMAPInsertMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes w = 1;
  if (!this->_internal_w().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_w());
  }

  // bytes idorn = 2;
  if (!this->_internal_idorn().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_idorn());
  }

  // bytes value = 4;
  if (!this->_internal_value().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // uint32 flag = 3;
  if (this->_internal_flag() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_flag());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OMAPInsertMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    OMAPInsertMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OMAPInsertMessage::GetClassData() const { return &_class_data_; }

void OMAPInsertMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<OMAPInsertMessage *>(to)->MergeFrom(
      static_cast<const OMAPInsertMessage &>(from));
}


void OMAPInsertMessage::MergeFrom(const OMAPInsertMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.OMAPInsertMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_w().empty()) {
    _internal_set_w(from._internal_w());
  }
  if (!from._internal_idorn().empty()) {
    _internal_set_idorn(from._internal_idorn());
  }
  if (!from._internal_value().empty()) {
    _internal_set_value(from._internal_value());
  }
  if (from._internal_flag() != 0) {
    _internal_set_flag(from._internal_flag());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OMAPInsertMessage::CopyFrom(const OMAPInsertMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.OMAPInsertMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OMAPInsertMessage::IsInitialized() const {
  return true;
}

void OMAPInsertMessage::InternalSwap(OMAPInsertMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &w_, lhs_arena,
      &other->w_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &idorn_, lhs_arena,
      &other->idorn_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &value_, lhs_arena,
      &other->value_, rhs_arena
  );
  swap(flag_, other->flag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OMAPInsertMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[4]);
}

// ===================================================================

class UpdateRequestMessage_Rose_2::_Internal {
 public:
};

UpdateRequestMessage_Rose_2::UpdateRequestMessage_Rose_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.UpdateRequestMessage_Rose_2)
}
UpdateRequestMessage_Rose_2::UpdateRequestMessage_Rose_2(const UpdateRequestMessage_Rose_2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_l().empty()) {
    l_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_l(), 
      GetArenaForAllocation());
  }
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c().empty()) {
    c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.UpdateRequestMessage_Rose_2)
}

inline void UpdateRequestMessage_Rose_2::SharedCtor() {
l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRequestMessage_Rose_2::~UpdateRequestMessage_Rose_2() {
  // @@protoc_insertion_point(destructor:DistSSE.UpdateRequestMessage_Rose_2)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRequestMessage_Rose_2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  l_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  c_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateRequestMessage_Rose_2::ArenaDtor(void* object) {
  UpdateRequestMessage_Rose_2* _this = reinterpret_cast< UpdateRequestMessage_Rose_2* >(object);
  (void)_this;
}
void UpdateRequestMessage_Rose_2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRequestMessage_Rose_2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRequestMessage_Rose_2::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.UpdateRequestMessage_Rose_2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l_.ClearToEmpty();
  c_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRequestMessage_Rose_2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes L = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_l();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes C = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_c();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRequestMessage_Rose_2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.UpdateRequestMessage_Rose_2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes L = 1;
  if (!this->_internal_l().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_l(), target);
  }

  // bytes C = 2;
  if (!this->_internal_c().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.UpdateRequestMessage_Rose_2)
  return target;
}

size_t UpdateRequestMessage_Rose_2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.UpdateRequestMessage_Rose_2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes L = 1;
  if (!this->_internal_l().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_l());
  }

  // bytes C = 2;
  if (!this->_internal_c().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRequestMessage_Rose_2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRequestMessage_Rose_2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRequestMessage_Rose_2::GetClassData() const { return &_class_data_; }

void UpdateRequestMessage_Rose_2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRequestMessage_Rose_2 *>(to)->MergeFrom(
      static_cast<const UpdateRequestMessage_Rose_2 &>(from));
}


void UpdateRequestMessage_Rose_2::MergeFrom(const UpdateRequestMessage_Rose_2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.UpdateRequestMessage_Rose_2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_l().empty()) {
    _internal_set_l(from._internal_l());
  }
  if (!from._internal_c().empty()) {
    _internal_set_c(from._internal_c());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRequestMessage_Rose_2::CopyFrom(const UpdateRequestMessage_Rose_2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.UpdateRequestMessage_Rose_2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequestMessage_Rose_2::IsInitialized() const {
  return true;
}

void UpdateRequestMessage_Rose_2::InternalSwap(UpdateRequestMessage_Rose_2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &l_, lhs_arena,
      &other->l_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c_, lhs_arena,
      &other->c_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRequestMessage_Rose_2::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[5]);
}

// ===================================================================

class SearchRequestMessage_Rose_2::_Internal {
 public:
};

SearchRequestMessage_Rose_2::SearchRequestMessage_Rose_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.SearchRequestMessage_Rose_2)
}
SearchRequestMessage_Rose_2::SearchRequestMessage_Rose_2(const SearchRequestMessage_Rose_2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  k_u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    k_u_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_k_u().empty()) {
    k_u_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_k_u(), 
      GetArenaForAllocation());
  }
  delta_k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delta_k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delta_k().empty()) {
    delta_k_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delta_k(), 
      GetArenaForAllocation());
  }
  tk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tk_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tk().empty()) {
    tk_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tk(), 
      GetArenaForAllocation());
  }
  ::memcpy(&sn_, &from.sn_,
    static_cast<size_t>(reinterpret_cast<char*>(&cnt_i_) -
    reinterpret_cast<char*>(&sn_)) + sizeof(cnt_i_));
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchRequestMessage_Rose_2)
}

inline void SearchRequestMessage_Rose_2::SharedCtor() {
k_u_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  k_u_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
delta_k_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delta_k_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tk_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tk_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&sn_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&cnt_i_) -
    reinterpret_cast<char*>(&sn_)) + sizeof(cnt_i_));
}

SearchRequestMessage_Rose_2::~SearchRequestMessage_Rose_2() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchRequestMessage_Rose_2)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchRequestMessage_Rose_2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  k_u_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  delta_k_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tk_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchRequestMessage_Rose_2::ArenaDtor(void* object) {
  SearchRequestMessage_Rose_2* _this = reinterpret_cast< SearchRequestMessage_Rose_2* >(object);
  (void)_this;
}
void SearchRequestMessage_Rose_2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchRequestMessage_Rose_2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchRequestMessage_Rose_2::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchRequestMessage_Rose_2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  k_u_.ClearToEmpty();
  delta_k_.ClearToEmpty();
  tk_.ClearToEmpty();
  ::memset(&sn_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cnt_i_) -
      reinterpret_cast<char*>(&sn_)) + sizeof(cnt_i_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchRequestMessage_Rose_2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes K_u = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_k_u();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes delta_k = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_delta_k();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes tk = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_tk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 sn = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          sn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cnt_d = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          cnt_d_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 cnt_i = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          cnt_i_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchRequestMessage_Rose_2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchRequestMessage_Rose_2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes K_u = 1;
  if (!this->_internal_k_u().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_k_u(), target);
  }

  // bytes delta_k = 2;
  if (!this->_internal_delta_k().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_delta_k(), target);
  }

  // bytes tk = 3;
  if (!this->_internal_tk().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_tk(), target);
  }

  // uint32 sn = 4;
  if (this->_internal_sn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_sn(), target);
  }

  // uint32 cnt_d = 5;
  if (this->_internal_cnt_d() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_cnt_d(), target);
  }

  // uint32 cnt_i = 6;
  if (this->_internal_cnt_i() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_cnt_i(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchRequestMessage_Rose_2)
  return target;
}

size_t SearchRequestMessage_Rose_2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchRequestMessage_Rose_2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes K_u = 1;
  if (!this->_internal_k_u().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_k_u());
  }

  // bytes delta_k = 2;
  if (!this->_internal_delta_k().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_delta_k());
  }

  // bytes tk = 3;
  if (!this->_internal_tk().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tk());
  }

  // uint32 sn = 4;
  if (this->_internal_sn() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_sn());
  }

  // uint32 cnt_d = 5;
  if (this->_internal_cnt_d() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_cnt_d());
  }

  // uint32 cnt_i = 6;
  if (this->_internal_cnt_i() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32SizePlusOne(this->_internal_cnt_i());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchRequestMessage_Rose_2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchRequestMessage_Rose_2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchRequestMessage_Rose_2::GetClassData() const { return &_class_data_; }

void SearchRequestMessage_Rose_2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchRequestMessage_Rose_2 *>(to)->MergeFrom(
      static_cast<const SearchRequestMessage_Rose_2 &>(from));
}


void SearchRequestMessage_Rose_2::MergeFrom(const SearchRequestMessage_Rose_2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchRequestMessage_Rose_2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_k_u().empty()) {
    _internal_set_k_u(from._internal_k_u());
  }
  if (!from._internal_delta_k().empty()) {
    _internal_set_delta_k(from._internal_delta_k());
  }
  if (!from._internal_tk().empty()) {
    _internal_set_tk(from._internal_tk());
  }
  if (from._internal_sn() != 0) {
    _internal_set_sn(from._internal_sn());
  }
  if (from._internal_cnt_d() != 0) {
    _internal_set_cnt_d(from._internal_cnt_d());
  }
  if (from._internal_cnt_i() != 0) {
    _internal_set_cnt_i(from._internal_cnt_i());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequestMessage_Rose_2::CopyFrom(const SearchRequestMessage_Rose_2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchRequestMessage_Rose_2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequestMessage_Rose_2::IsInitialized() const {
  return true;
}

void SearchRequestMessage_Rose_2::InternalSwap(SearchRequestMessage_Rose_2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &k_u_, lhs_arena,
      &other->k_u_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delta_k_, lhs_arena,
      &other->delta_k_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tk_, lhs_arena,
      &other->tk_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchRequestMessage_Rose_2, cnt_i_)
      + sizeof(SearchRequestMessage_Rose_2::cnt_i_)
      - PROTOBUF_FIELD_OFFSET(SearchRequestMessage_Rose_2, sn_)>(
          reinterpret_cast<char*>(&sn_),
          reinterpret_cast<char*>(&other->sn_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRequestMessage_Rose_2::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[6]);
}

// ===================================================================

class SearchReply_Rose_2::_Internal {
 public:
};

SearchReply_Rose_2::SearchReply_Rose_2(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.SearchReply_Rose_2)
}
SearchReply_Rose_2::SearchReply_Rose_2(const SearchReply_Rose_2& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c().empty()) {
    c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchReply_Rose_2)
}

inline void SearchReply_Rose_2::SharedCtor() {
c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchReply_Rose_2::~SearchReply_Rose_2() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchReply_Rose_2)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchReply_Rose_2::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  c_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchReply_Rose_2::ArenaDtor(void* object) {
  SearchReply_Rose_2* _this = reinterpret_cast< SearchReply_Rose_2* >(object);
  (void)_this;
}
void SearchReply_Rose_2::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchReply_Rose_2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchReply_Rose_2::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchReply_Rose_2)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  c_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchReply_Rose_2::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes C = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_c();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchReply_Rose_2::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchReply_Rose_2)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes C = 1;
  if (!this->_internal_c().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchReply_Rose_2)
  return target;
}

size_t SearchReply_Rose_2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchReply_Rose_2)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes C = 1;
  if (!this->_internal_c().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchReply_Rose_2::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchReply_Rose_2::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchReply_Rose_2::GetClassData() const { return &_class_data_; }

void SearchReply_Rose_2::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchReply_Rose_2 *>(to)->MergeFrom(
      static_cast<const SearchReply_Rose_2 &>(from));
}


void SearchReply_Rose_2::MergeFrom(const SearchReply_Rose_2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchReply_Rose_2)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_c().empty()) {
    _internal_set_c(from._internal_c());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchReply_Rose_2::CopyFrom(const SearchReply_Rose_2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchReply_Rose_2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply_Rose_2::IsInitialized() const {
  return true;
}

void SearchReply_Rose_2::InternalSwap(SearchReply_Rose_2* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c_, lhs_arena,
      &other->c_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchReply_Rose_2::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[7]);
}

// ===================================================================

class SetupRequestMessage::_Internal {
 public:
};

SetupRequestMessage::SetupRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.SetupRequestMessage)
}
SetupRequestMessage::SetupRequestMessage(const SetupRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  setup_size_ = from.setup_size_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.SetupRequestMessage)
}

inline void SetupRequestMessage::SharedCtor() {
setup_size_ = uint64_t{0u};
}

SetupRequestMessage::~SetupRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.SetupRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SetupRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SetupRequestMessage::ArenaDtor(void* object) {
  SetupRequestMessage* _this = reinterpret_cast< SetupRequestMessage* >(object);
  (void)_this;
}
void SetupRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetupRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SetupRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SetupRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  setup_size_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetupRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 setup_size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          setup_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SetupRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SetupRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 setup_size = 1;
  if (this->_internal_setup_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_setup_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SetupRequestMessage)
  return target;
}

size_t SetupRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SetupRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 setup_size = 1;
  if (this->_internal_setup_size() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64SizePlusOne(this->_internal_setup_size());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SetupRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SetupRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SetupRequestMessage::GetClassData() const { return &_class_data_; }

void SetupRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SetupRequestMessage *>(to)->MergeFrom(
      static_cast<const SetupRequestMessage &>(from));
}


void SetupRequestMessage::MergeFrom(const SetupRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SetupRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_setup_size() != 0) {
    _internal_set_setup_size(from._internal_setup_size());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SetupRequestMessage::CopyFrom(const SetupRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SetupRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetupRequestMessage::IsInitialized() const {
  return true;
}

void SetupRequestMessage::InternalSwap(SetupRequestMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(setup_size_, other->setup_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetupRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[8]);
}

// ===================================================================

class SearchRequestMessage::_Internal {
 public:
};

SearchRequestMessage::SearchRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.SearchRequestMessage)
}
SearchRequestMessage::SearchRequestMessage(const SearchRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tpd_l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tpd_l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tpd_l().empty()) {
    tpd_l_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tpd_l(), 
      GetArenaForAllocation());
  }
  tpd_t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tpd_t_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tpd_t().empty()) {
    tpd_t_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tpd_t(), 
      GetArenaForAllocation());
  }
  l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_l().empty()) {
    l_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_l(), 
      GetArenaForAllocation());
  }
  r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    r_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_r().empty()) {
    r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_r(), 
      GetArenaForAllocation());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    d_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArenaForAllocation());
  }
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c().empty()) {
    c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchRequestMessage)
}

inline void SearchRequestMessage::SharedCtor() {
tpd_l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tpd_l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
tpd_t_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tpd_t_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  r_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  d_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchRequestMessage::~SearchRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tpd_l_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tpd_t_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  l_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  c_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchRequestMessage::ArenaDtor(void* object) {
  SearchRequestMessage* _this = reinterpret_cast< SearchRequestMessage* >(object);
  (void)_this;
}
void SearchRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tpd_l_.ClearToEmpty();
  tpd_t_.ClearToEmpty();
  l_.ClearToEmpty();
  r_.ClearToEmpty();
  d_.ClearToEmpty();
  c_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes tpd_L = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tpd_l();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes tpd_T = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_tpd_t();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes L = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_l();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes R = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_r();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes D = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes C = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_c();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tpd_L = 1;
  if (!this->_internal_tpd_l().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tpd_l(), target);
  }

  // bytes tpd_T = 2;
  if (!this->_internal_tpd_t().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_tpd_t(), target);
  }

  // bytes L = 3;
  if (!this->_internal_l().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_l(), target);
  }

  // bytes R = 4;
  if (!this->_internal_r().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_r(), target);
  }

  // bytes D = 5;
  if (!this->_internal_d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_d(), target);
  }

  // bytes C = 6;
  if (!this->_internal_c().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchRequestMessage)
  return target;
}

size_t SearchRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tpd_L = 1;
  if (!this->_internal_tpd_l().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tpd_l());
  }

  // bytes tpd_T = 2;
  if (!this->_internal_tpd_t().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tpd_t());
  }

  // bytes L = 3;
  if (!this->_internal_l().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_l());
  }

  // bytes R = 4;
  if (!this->_internal_r().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_r());
  }

  // bytes D = 5;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // bytes C = 6;
  if (!this->_internal_c().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchRequestMessage::GetClassData() const { return &_class_data_; }

void SearchRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchRequestMessage *>(to)->MergeFrom(
      static_cast<const SearchRequestMessage &>(from));
}


void SearchRequestMessage::MergeFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tpd_l().empty()) {
    _internal_set_tpd_l(from._internal_tpd_l());
  }
  if (!from._internal_tpd_t().empty()) {
    _internal_set_tpd_t(from._internal_tpd_t());
  }
  if (!from._internal_l().empty()) {
    _internal_set_l(from._internal_l());
  }
  if (!from._internal_r().empty()) {
    _internal_set_r(from._internal_r());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  if (!from._internal_c().empty()) {
    _internal_set_c(from._internal_c());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchRequestMessage::CopyFrom(const SearchRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequestMessage::IsInitialized() const {
  return true;
}

void SearchRequestMessage::InternalSwap(SearchRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tpd_l_, lhs_arena,
      &other->tpd_l_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tpd_t_, lhs_arena,
      &other->tpd_t_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &l_, lhs_arena,
      &other->l_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &r_, lhs_arena,
      &other->r_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &d_, lhs_arena,
      &other->d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c_, lhs_arena,
      &other->c_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[9]);
}

// ===================================================================

class SearchReply::_Internal {
 public:
};

SearchReply::SearchReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.SearchReply)
}
SearchReply::SearchReply(const SearchReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ind_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    ind_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ind().empty()) {
    ind_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_ind(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.SearchReply)
}

inline void SearchReply::SharedCtor() {
ind_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  ind_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchReply::~SearchReply() {
  // @@protoc_insertion_point(destructor:DistSSE.SearchReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  ind_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchReply::ArenaDtor(void* object) {
  SearchReply* _this = reinterpret_cast< SearchReply* >(object);
  (void)_this;
}
void SearchReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchReply::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.SearchReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ind_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes ind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ind();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.SearchReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ind = 1;
  if (!this->_internal_ind().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_ind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.SearchReply)
  return target;
}

size_t SearchReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.SearchReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes ind = 1;
  if (!this->_internal_ind().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_ind());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchReply::GetClassData() const { return &_class_data_; }

void SearchReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchReply *>(to)->MergeFrom(
      static_cast<const SearchReply &>(from));
}


void SearchReply::MergeFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.SearchReply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ind().empty()) {
    _internal_set_ind(from._internal_ind());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchReply::CopyFrom(const SearchReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.SearchReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchReply::IsInitialized() const {
  return true;
}

void SearchReply::InternalSwap(SearchReply* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &ind_, lhs_arena,
      &other->ind_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[10]);
}

// ===================================================================

class CacheRequestMessage::_Internal {
 public:
};

CacheRequestMessage::CacheRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.CacheRequestMessage)
}
CacheRequestMessage::CacheRequestMessage(const CacheRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    tw_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_tw().empty()) {
    tw_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_tw(), 
      GetArenaForAllocation());
  }
  inds_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    inds_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_inds().empty()) {
    inds_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_inds(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.CacheRequestMessage)
}

inline void CacheRequestMessage::SharedCtor() {
tw_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  tw_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
inds_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  inds_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CacheRequestMessage::~CacheRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.CacheRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void CacheRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  tw_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inds_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CacheRequestMessage::ArenaDtor(void* object) {
  CacheRequestMessage* _this = reinterpret_cast< CacheRequestMessage* >(object);
  (void)_this;
}
void CacheRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CacheRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void CacheRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.CacheRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tw_.ClearToEmpty();
  inds_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CacheRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes tw = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_tw();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes inds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_inds();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CacheRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.CacheRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tw = 1;
  if (!this->_internal_tw().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tw(), target);
  }

  // bytes inds = 2;
  if (!this->_internal_inds().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_inds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.CacheRequestMessage)
  return target;
}

size_t CacheRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.CacheRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tw = 1;
  if (!this->_internal_tw().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tw());
  }

  // bytes inds = 2;
  if (!this->_internal_inds().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_inds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CacheRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    CacheRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CacheRequestMessage::GetClassData() const { return &_class_data_; }

void CacheRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<CacheRequestMessage *>(to)->MergeFrom(
      static_cast<const CacheRequestMessage &>(from));
}


void CacheRequestMessage::MergeFrom(const CacheRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.CacheRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tw().empty()) {
    _internal_set_tw(from._internal_tw());
  }
  if (!from._internal_inds().empty()) {
    _internal_set_inds(from._internal_inds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CacheRequestMessage::CopyFrom(const CacheRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.CacheRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CacheRequestMessage::IsInitialized() const {
  return true;
}

void CacheRequestMessage::InternalSwap(CacheRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &tw_, lhs_arena,
      &other->tw_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &inds_, lhs_arena,
      &other->inds_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CacheRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[11]);
}

// ===================================================================

class UpdateRequestMessage::_Internal {
 public:
};

UpdateRequestMessage::UpdateRequestMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.UpdateRequestMessage)
}
UpdateRequestMessage::UpdateRequestMessage(const UpdateRequestMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_l().empty()) {
    l_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_l(), 
      GetArenaForAllocation());
  }
  r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    r_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_r().empty()) {
    r_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_r(), 
      GetArenaForAllocation());
  }
  d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    d_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_d().empty()) {
    d_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_d(), 
      GetArenaForAllocation());
  }
  c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_c().empty()) {
    c_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_c(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:DistSSE.UpdateRequestMessage)
}

inline void UpdateRequestMessage::SharedCtor() {
l_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  l_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
r_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  r_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
d_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  d_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
c_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  c_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRequestMessage::~UpdateRequestMessage() {
  // @@protoc_insertion_point(destructor:DistSSE.UpdateRequestMessage)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void UpdateRequestMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  l_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  r_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  d_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  c_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateRequestMessage::ArenaDtor(void* object) {
  UpdateRequestMessage* _this = reinterpret_cast< UpdateRequestMessage* >(object);
  (void)_this;
}
void UpdateRequestMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateRequestMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UpdateRequestMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.UpdateRequestMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l_.ClearToEmpty();
  r_.ClearToEmpty();
  d_.ClearToEmpty();
  c_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRequestMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bytes L = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_l();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes R = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_r();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes D = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_d();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes C = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_c();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRequestMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.UpdateRequestMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes L = 1;
  if (!this->_internal_l().empty()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_l(), target);
  }

  // bytes R = 2;
  if (!this->_internal_r().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_r(), target);
  }

  // bytes D = 3;
  if (!this->_internal_d().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_d(), target);
  }

  // bytes C = 4;
  if (!this->_internal_c().empty()) {
    target = stream->WriteBytesMaybeAliased(
        4, this->_internal_c(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.UpdateRequestMessage)
  return target;
}

size_t UpdateRequestMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.UpdateRequestMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes L = 1;
  if (!this->_internal_l().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_l());
  }

  // bytes R = 2;
  if (!this->_internal_r().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_r());
  }

  // bytes D = 3;
  if (!this->_internal_d().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_d());
  }

  // bytes C = 4;
  if (!this->_internal_c().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_c());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRequestMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UpdateRequestMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRequestMessage::GetClassData() const { return &_class_data_; }

void UpdateRequestMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UpdateRequestMessage *>(to)->MergeFrom(
      static_cast<const UpdateRequestMessage &>(from));
}


void UpdateRequestMessage::MergeFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.UpdateRequestMessage)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_l().empty()) {
    _internal_set_l(from._internal_l());
  }
  if (!from._internal_r().empty()) {
    _internal_set_r(from._internal_r());
  }
  if (!from._internal_d().empty()) {
    _internal_set_d(from._internal_d());
  }
  if (!from._internal_c().empty()) {
    _internal_set_c(from._internal_c());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRequestMessage::CopyFrom(const UpdateRequestMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.UpdateRequestMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRequestMessage::IsInitialized() const {
  return true;
}

void UpdateRequestMessage::InternalSwap(UpdateRequestMessage* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &l_, lhs_arena,
      &other->l_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &r_, lhs_arena,
      &other->r_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &d_, lhs_arena,
      &other->d_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &c_, lhs_arena,
      &other->c_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRequestMessage::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[12]);
}

// ===================================================================

class ExecuteStatus::_Internal {
 public:
};

ExecuteStatus::ExecuteStatus(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:DistSSE.ExecuteStatus)
}
ExecuteStatus::ExecuteStatus(const ExecuteStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  status_ = from.status_;
  // @@protoc_insertion_point(copy_constructor:DistSSE.ExecuteStatus)
}

inline void ExecuteStatus::SharedCtor() {
status_ = false;
}

ExecuteStatus::~ExecuteStatus() {
  // @@protoc_insertion_point(destructor:DistSSE.ExecuteStatus)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ExecuteStatus::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExecuteStatus::ArenaDtor(void* object) {
  ExecuteStatus* _this = reinterpret_cast< ExecuteStatus* >(object);
  (void)_this;
}
void ExecuteStatus::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExecuteStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ExecuteStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:DistSSE.ExecuteStatus)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExecuteStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExecuteStatus::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DistSSE.ExecuteStatus)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DistSSE.ExecuteStatus)
  return target;
}

size_t ExecuteStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DistSSE.ExecuteStatus)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExecuteStatus::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ExecuteStatus::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExecuteStatus::GetClassData() const { return &_class_data_; }

void ExecuteStatus::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ExecuteStatus *>(to)->MergeFrom(
      static_cast<const ExecuteStatus &>(from));
}


void ExecuteStatus::MergeFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DistSSE.ExecuteStatus)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_status() != 0) {
    _internal_set_status(from._internal_status());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExecuteStatus::CopyFrom(const ExecuteStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DistSSE.ExecuteStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecuteStatus::IsInitialized() const {
  return true;
}

void ExecuteStatus::InternalSwap(ExecuteStatus* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(status_, other->status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExecuteStatus::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_DistSSE_2eproto_getter, &descriptor_table_DistSSE_2eproto_once,
      file_level_metadata_DistSSE_2eproto[13]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace DistSSE
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DistSSE::batchOMAPFindMessage* Arena::CreateMaybeMessage< ::DistSSE::batchOMAPFindMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::batchOMAPFindMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::batchOMAPFindReply* Arena::CreateMaybeMessage< ::DistSSE::batchOMAPFindReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::batchOMAPFindReply >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::OMAPFindMessage* Arena::CreateMaybeMessage< ::DistSSE::OMAPFindMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::OMAPFindMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::OMAPFindReply* Arena::CreateMaybeMessage< ::DistSSE::OMAPFindReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::OMAPFindReply >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::OMAPInsertMessage* Arena::CreateMaybeMessage< ::DistSSE::OMAPInsertMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::OMAPInsertMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::UpdateRequestMessage_Rose_2* Arena::CreateMaybeMessage< ::DistSSE::UpdateRequestMessage_Rose_2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::UpdateRequestMessage_Rose_2 >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::SearchRequestMessage_Rose_2* Arena::CreateMaybeMessage< ::DistSSE::SearchRequestMessage_Rose_2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::SearchRequestMessage_Rose_2 >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::SearchReply_Rose_2* Arena::CreateMaybeMessage< ::DistSSE::SearchReply_Rose_2 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::SearchReply_Rose_2 >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::SetupRequestMessage* Arena::CreateMaybeMessage< ::DistSSE::SetupRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::SetupRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::SearchRequestMessage* Arena::CreateMaybeMessage< ::DistSSE::SearchRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::SearchRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::SearchReply* Arena::CreateMaybeMessage< ::DistSSE::SearchReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::SearchReply >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::CacheRequestMessage* Arena::CreateMaybeMessage< ::DistSSE::CacheRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::CacheRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::UpdateRequestMessage* Arena::CreateMaybeMessage< ::DistSSE::UpdateRequestMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::UpdateRequestMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::DistSSE::ExecuteStatus* Arena::CreateMaybeMessage< ::DistSSE::ExecuteStatus >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DistSSE::ExecuteStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
